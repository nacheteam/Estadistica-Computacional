<!doctype html>
<html class="no-js" lang="en">
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      processEscapes: true
    }
  });
</script>
<script type="text/javascript"
    src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

    <head>
        <!-- meta data -->
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->

        <!--font-family-->
		<link href="https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900&amp;subset=devanagari,latin-ext" rel="stylesheet">

        <!-- title of site -->
        <title>Ejercicio 1</title>

        <!-- For favicon png -->
		<link rel="shortcut icon" type="image/icon" href="assets/logo/favicon.png"/>

        <!--font-awesome.min.css-->
        <link rel="stylesheet" href="assets/css/font-awesome.min.css">

		<!--flat icon css-->
		<link rel="stylesheet" href="assets/css/flaticon.css">

		<!--animate.css-->
        <link rel="stylesheet" href="assets/css/animate.css">

        <!--owl.carousel.css-->
        <link rel="stylesheet" href="assets/css/owl.carousel.min.css">
		<link rel="stylesheet" href="assets/css/owl.theme.default.min.css">

        <!--bootstrap.min.css-->
        <link rel="stylesheet" href="assets/css/bootstrap.min.css">

		<!-- bootsnav -->
		<link rel="stylesheet" href="assets/css/bootsnav.css" >

        <!--style.css-->
        <link rel="stylesheet" href="assets/css/style.css">

        <!--responsive.css-->
        <link rel="stylesheet" href="assets/css/responsive.css">

        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->

        <!--[if lt IE 9]>
			<script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
			<script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
        <![endif]-->

    </head>

	<body>
		<!--[if lte IE 9]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="https://browsehappy.com/">upgrade your browser</a> to improve your experience and security.</p>
        <![endif]-->

		<!-- top-area Start -->
		<header class="top-area">
			<div class="header-area">
				<!-- Start Navigation -->
			    <nav class="navbar navbar-default bootsnav navbar-fixed dark no-background">

			        <div class="container">

			            <!-- Start Header Navigation -->
			            <div class="navbar-header">
			                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-menu">
			                    <i class="fa fa-bars"></i>
			                </button>
			                <a class="navbar-brand" href="index.html">Ejercicio 1. Ignacio Aguilera Martos</a>
			            </div><!--/.navbar-header-->
			            <!-- End Header Navigation -->

			            <!-- Collect the nav links, forms, and other content for toggling -->
			            <div class="collapse navbar-collapse menu-ui-design" id="navbar-menu">
			                <ul class="nav navbar-nav navbar-right" data-in="fadeInDown" data-out="fadeOutUp">
			                <li class=" smooth-menu active"></li>
			                    <li class=" smooth-menu"><a href="#ej1">Ejercicio 1</a></li>
			                </ul><!--/.nav -->
			            </div><!-- /.navbar-collapse -->
			        </div><!--/.container-->
			    </nav><!--/nav-->
			    <!-- End Navigation -->
			</div><!--/.header-area-->

		    <div class="clearfix"></div>

		</header><!-- /.top-area-->
		<!-- top-area End -->

		<!--welcome-hero start -->
		<section id="welcome-hero" class="welcome-hero">
			<div class="container">
				<div class="row">
					<div class="col-md-12 text-center">
						<div class="header-text">
							<h2>Estadística Computacional</h2>
							<p>Universidad de Granada</p>
						</div><!--/.header-text-->
					</div><!--/.col-->
				</div><!-- /.row-->
			</div><!-- /.container-->

		</section><!--/.welcome-hero-->
		<!--welcome-hero end -->

		<!--Ejercicio 1 start -->
		<section id="ej1" class="about">
			<div class="section-heading text-center">
				<h2>Ejercicio 1</h2>
			</div>
			<div class="container">
				<div class="about-content">
					<div class="row">
						<div class="single-about-txt">
              <h2><u><b>Enunciado</b></u></h2>
              <p>
                <ul>
                  <li>
                    Considera en el plano un círculo centrado en el origen, de radio 50.
                    Considera un punto del plano que se encuentra en el origen y se desplaza del siguiente modo:
                    <ul>
                      <li>En cada tiempo t, t=1,2,... se lanzan un dado y una moneda.</li>
                      <li>Si el dado es 3 o 5, la primera coordenada del punto aumenta una unidad, si es 4 no se modifica, y en el resto de casos disminuye una unidad.</li>
                      <li>Si la moneda es cara, la segunda coordenada del punto aumenta una unidad; si es cruz y el dado es 1, no se modifica. En el resto de casos disminuye una unidad.</li>
                      <li>El proceso finaliza si y solo si el punto alcanza la circunferencia o sale del círculo.</li>
                    </ul>
                  </li>
                  <li>
                    Escribe una función, f, que simule el movimiento del punto y devuelva:
                    <ul>
                      <li>La progresión aleatoria definida</li>
                      <li>Cuantos pasos han sido necesarios para llegar al límite</li>
                    </ul>
                  </li>
                  <li>Realiza una simulación concreta del proceso y represéntala gráficamente</li>
                  <li>Escribe una función, Distri, con un argumento que permita repetir un número de veces, n, este proceso y devuelva un vector con el número de pasos necesarios para salir del recinto en cada repetición</li>
                  <li>Analiza la distribución del parámetro n</li>
                </ul>
                Añade los comentarios que estimes oportunos y todos los parámetros que creas necesarios para cada función.
              </p>
              <h2><u><b>Solución</b></u></h2>
              <p>
                Comenzamos visualizando el recinto que estamos describiendo.
              </p>
              <!--begin.rcode
              dibuja_circunferencia <- function(R){
                f = function(x){sqrt(R^2-x^2)}
                plot(x=c(0,1), y=c(0,1), type="n", xlim=c(-R,R),ylim=c(-R,R))
                curve(f(x),col="blue", add=T)
                curve(-f(x),add=T,col="blue")
              }
              dibuja_circunferencia(50)
              end.rcode-->
              <p>
                Ahora debemos escribir una función que nos indique si un punto está o no dentro de un círculo. Esta función toma como argumentos
                las coordenadas x e y del punto y el radio de la circunferencia. Si recordamos la ecuación de la misma $x^2 + y^2 = r^2$ podemos
                deducir que la forma de ver si un punto $(x,y)$ está fuera del círculo o en la circunferencia es comprobar la desigualdad
                $x^2 + y^2\geq r^2$
              </p>
              <!--begin.rcode
              fuera_cfa <- function(x,y, r){
                return ((x^2+y^2)>=r^2)
              }
              end.rcode-->
              <p>
                Escribamos ahora la función que simula el movimiento de la partícula.
              </p>
              <!--begin.rcode
              f<-function(x0=0,y0=0){
                x<-0
                y<-0
                t<-1
                sucX<-c(x)
                sucY<-c(y)
                while(TRUE){
                  # Tiramos un dado y una moneda
                  dado<-sample(x=c(1,2,3,4,5,6),1)
                  moneda<-sample(x=c("cara","cruz"),1)
                  # Si el dado es 3 o 5
                  if(dado==3 || dado==5)
                    x<-x+1
                  # Si el dado es 1,2 o 6
                  else if(dado==1 || dado==2 || dado==6)
                    x<-x-1
                  # Si la moneda es cara
                  if(moneda=="cara")
                    y<-y+1
                  # Si la moneda es cruz y el dado no es 1
                  if(moneda=="cruz" && dado!=1)
                    y<-y-1
                  sucX<-c(sucX,x)
                  sucY<-c(sucY,y)
                  t<-t+1
                  if(fuera_cfa(x,y,50))
                    break
                }
                return(list(X=sucX, Y=sucY, NumPasos=t))
              }
              end.rcode-->
              <p>
                Como podemos ver la función recibe dos parámetros x0 e y0 que por defecto son 0, de forma que por defecto el movimiento empezará en el origen.
                Dentro de la función controlamos el movimiento mediante las variables x e y que representan la posición actual de la partícula. Asimismo el resultado
                de la progresión de pasos se va almacenando en los vectores sucX y sucY, así como el número de pasos dados en t. Por último he devuelto los resultados
                en una lista que tiene como elementos a X siendo la sucesión de valores tomados para la primera coordenada, Y los valores tomados para la segunda
                y NumPasos el número de pasos dados.
              </p>
              <p>
                Veamos el resultado de una ejecución.
              </p>
              <!--begin.rcode
              movimiento<-f()
              movimiento
              end.rcode-->
              <p>
                Vamos a hacer ahora una función simple que nos pinte el resultado y el punto de salida.
              </p>
              <!--begin.rcode
              dibujaResultado<-function(X,Y,numPuntos){
                dibuja_circunferencia(50)
                lines(X[1:numPuntos],Y[1:numPuntos], col="blue")
                points(x=X[numPuntos],y=Y[numPuntos],col="red",type="o", pch=16, bg=par("bg"),cex=1.5)
              }
              end.rcode-->
              <p>
                Esta función toma la sucesión de puntos y pinta en primer lugar una circunferencia de radio 50 centrada en el origen y luego pinta líneas
                uniendo los puntos generados por el movimiento. Por último para que se vea bien pintamos un punto rojo donde se haya salido o tocado
                a la circunferencia.
              </p>
              <!--begin.rcode
              dibujaResultado(movimiento$X, movimiento$Y, movimiento$NumPasos)
              end.rcode-->
              <p>
                Vamos ahora a realizar la función que estudia la distribución de pasos que hacen falta para salirse de la circunferencia.
              </p>
              <!--begin.rcode
              Distri<-function(n=1000){
                sucesion_numPasos<-1:n
                for(i in 1:n){
                  sucesion_numPasos[i]<-f()$NumPasos
                }
                return(sucesion_numPasos)
              }
              end.rcode-->
              <p>
                Esta función llama n veces a la función del movimiento aleatorio guardando en un vector el número de pasos necesitados para salir de la circunferencia
                en cada intento. Hagamos una ejecución y veamos un histograma para saber la distribución.
              </p>
              <!--begin.rcode
              varios<-Distri()
              hist(varios)
              end.rcode-->
						</div>
					</div>
				</div>
			</div>
		</section><!--/.about-->
		<!--Ejercicio 1 end -->

		<!-- Include all js compiled plugins (below), or include individual files as needed -->

		<script src="assets/js/jquery.js"></script>

        <!--modernizr.min.js-->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script>

		<!--bootstrap.min.js-->
        <script src="assets/js/bootstrap.min.js"></script>

		<!-- bootsnav js -->
		<script src="assets/js/bootsnav.js"></script>

		<!-- jquery.sticky.js -->
		<script src="assets/js/jquery.sticky.js"></script>

		<!-- for progress bar start-->

		<!-- progressbar js -->
		<script src="assets/js/progressbar.js"></script>

		<!-- appear js -->
		<script src="assets/js/jquery.appear.js"></script>

		<!-- for progress bar end -->

		<!--owl.carousel.js-->
        <script src="assets/js/owl.carousel.min.js"></script>


		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-easing/1.4.1/jquery.easing.min.js"></script>


        <!--Custom JS-->
        <script src="assets/js/custom.js"></script>

    </body>

</html>
